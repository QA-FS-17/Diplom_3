{"name": "test_user_orders_in_feed[firefox]", "status": "broken", "statusDetails": {"message": "RuntimeError: Таймаут авторизации. Текущий URL: https://stellarburgers.nomoreparties.site/", "trace": "self = <pages.login_page.LoginPage object at 0x000001EEE783B100>\n\n    def _wait_for_authorization_complete(self) -> None:\n        \"\"\"Ожидает завершения авторизации\"\"\"\n        expected_url_part = \"account\"\n        try:\n>           self._wait_until(\n                lambda d: expected_url_part in d.current_url.lower(),\n                timeout=self._auth_timeout,\n                message=f\"URL страницы не содержит '{expected_url_part}'. Текущий URL: {self.driver.current_url}\"\n            )\n\npages\\login_page.py:98: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.login_page.LoginPage object at 0x000001EEE783B100>\ncondition = <function LoginPage._wait_for_authorization_complete.<locals>.<lambda> at 0x000001EEE8E356C0>, timeout = 10\nmessage = \"URL страницы не содержит 'account'. Текущий URL: https://stellarburgers.nomoreparties.site/\"\n\n    def _wait_until(self,\n                    condition: Callable[[WebDriver], Any],\n                    timeout: Union[int, float, None] = None,\n                    message: str = \"\") -> Any:\n        \"\"\"\n        Абстрактное ожидание условия\n        :param condition: Ожидаемое условие\n        :param timeout: Время ожидания\n        :param message: Сообщение об ошибке\n        \"\"\"\n        try:\n            wait_timeout = float(timeout) if timeout is not None else self.timeout\n>           return WebDriverWait(self.driver, wait_timeout).until(condition, message)\n\npages\\base_page.py:48: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"258bc872-79e4-4c83-9452-8009fbc13208\")>\nmethod = <function LoginPage._wait_for_authorization_complete.<locals>.<lambda> at 0x000001EEE8E356C0>\nmessage = \"URL страницы не содержит 'account'. Текущий URL: https://stellarburgers.nomoreparties.site/\"\n\n    def until(self, method: Callable[[WebDriver], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: URL страницы не содержит 'account'. Текущий URL: https://stellarburgers.nomoreparties.site/\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:101: TimeoutException\n\nThe above exception was the direct cause of the following exception:\n\ndriver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"258bc872-79e4-4c83-9452-8009fbc13208\")>\ntest_user = {'email': 'test_31b4325f@example.com', 'name': 'Test User', 'password': 'Password123'}\n\n    @pytest.fixture\n    def authenticated_user(driver, test_user):\n        \"\"\"Фикстура для авторизованного пользователя через UI\"\"\"\n        from pages.login_page import LoginPage\n    \n        login_page = LoginPage(driver)\n        login_page.open()\n>       login_page.login(test_user[\"email\"], test_user[\"password\"])\n\ntests\\conftest.py:128: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\login_page.py:43: in login\n    self._wait_for_authorization_complete()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.login_page.LoginPage object at 0x000001EEE783B100>\n\n    def _wait_for_authorization_complete(self) -> None:\n        \"\"\"Ожидает завершения авторизации\"\"\"\n        expected_url_part = \"account\"\n        try:\n            self._wait_until(\n                lambda d: expected_url_part in d.current_url.lower(),\n                timeout=self._auth_timeout,\n                message=f\"URL страницы не содержит '{expected_url_part}'. Текущий URL: {self.driver.current_url}\"\n            )\n        except TimeoutException as e:\n>           raise RuntimeError(f\"Таймаут авторизации. Текущий URL: {self.driver.current_url}\") from e\nE           RuntimeError: Таймаут авторизации. Текущий URL: https://stellarburgers.nomoreparties.site/\n\npages\\login_page.py:104: RuntimeError"}, "attachments": [{"name": "stderr", "source": "3332f398-1dd4-4281-99c0-e8f4d8519ca2-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "driver", "value": "'firefox'"}], "start": 1748821037344, "stop": 1748821037344, "uuid": "7bb8f0a5-689b-4eee-a839-f4b8d7eba6cb", "historyId": "fcbefa990a8f185065d28ee9f2aed89d", "testCaseId": "cf22be1fd6f7191fd153ea110723d85a", "fullName": "tests.test_order_feed.TestOrderFeed#test_user_orders_in_feed", "labels": [{"name": "feature", "value": "Лента заказов"}, {"name": "story", "value": "Отображение заказов пользователя в ленте"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order_feed"}, {"name": "subSuite", "value": "TestOrderFeed"}, {"name": "host", "value": "Gemini_78"}, {"name": "thread", "value": "8968-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order_feed"}]}