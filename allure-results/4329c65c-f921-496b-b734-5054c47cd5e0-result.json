{"name": "4. Проверка увеличения счетчика 'Выполнено за сегодня'", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: Счетчик за сегодня не увеличился. Начальное значение: 1100", "trace": "self = <tests.test_order_feed.TestOrderFeed object at 0x000001DE7E172150>\ndriver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"fac9a742-e2b1-4b74-a091-75dcf85eaad0\")>, login = {'email': 'test1353@test.com', 'token': None}\n\n    @allure.title(\"4. Проверка увеличения счетчика 'Выполнено за сегодня'\")\n    def test_today_orders_counter(self, driver, login):\n        main_page = MainPage(driver)\n        order_feed_page = OrderFeedPage(driver)\n        with allure.step(\"Получить текущее значение счетчика\"):\n            main_page.go_to_order_feed()\n            WebDriverWait(driver, 15).until(\n                EC.visibility_of_element_located(OrderFeedLocators.TODAY_ORDERS_COUNT)\n            )\n            initial_today = int(driver.find_element(*OrderFeedLocators.TODAY_ORDERS_COUNT).text)\n        with allure.step(\"Создать новый заказ\"):\n            main_page.open()\n            WebDriverWait(driver, 15).until(\n                EC.visibility_of_element_located(MainPageLocators.CONSTRUCTOR_DROP_ZONE)\n            )\n            bun = WebDriverWait(driver, 15).until(\n                EC.visibility_of_element_located(MainPageLocators.BUN_ITEM)\n            )\n            constructor = driver.find_element(*MainPageLocators.CONSTRUCTOR_DROP_ZONE)\n            drag_and_drop(driver, bun, constructor)\n            WebDriverWait(driver, 15).until(\n                lambda d: d.find_element(*MainPageLocators.MAKE_ORDER_BUTTON).is_enabled()\n            )\n            main_page.make_order()\n            close_btn = WebDriverWait(driver, 15).until(\n                EC.element_to_be_clickable(MainPageLocators.MODAL_CLOSE_BUTTON)\n            )\n            driver.execute_script(\"arguments[0].click();\", close_btn)\n            WebDriverWait(driver, 15).until(\n                EC.invisibility_of_element_located(MainPageLocators.MODAL_OVERLAY)\n            )\n        with allure.step(\"Проверить увеличение счетчика\"):\n            # Явное ожидание перед переходом\n            WebDriverWait(driver, 15).until(\n                EC.visibility_of_element_located(MainPageLocators.CONSTRUCTOR_DROP_ZONE)\n            )\n            main_page.go_to_order_feed()\n>           WebDriverWait(driver, 15).until(\n                lambda d: int(d.find_element(*OrderFeedLocators.TODAY_ORDERS_COUNT).text) > initial_today,\n                message=f\"Счетчик за сегодня не увеличился. Начальное значение: {initial_today}\"\n            )\n\ntests\\test_order_feed.py:159: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"fac9a742-e2b1-4b74-a091-75dcf85eaad0\")>\nmethod = <function TestOrderFeed.test_today_orders_counter.<locals>.<lambda> at 0x000001DE00045300>\nmessage = 'Счетчик за сегодня не увеличился. Начальное значение: 1100'\n\n    def until(self, method: Callable[[WebDriver], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: Счетчик за сегодня не увеличился. Начальное значение: 1100\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:101: TimeoutException"}, "steps": [{"name": "Получить текущее значение счетчика", "status": "passed", "start": 1748199826971, "stop": 1748199848866}, {"name": "Создать новый заказ", "status": "passed", "start": 1748199848866, "stop": 1748199880921}, {"name": "Проверить увеличение счетчика", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: Счетчик за сегодня не увеличился. Начальное значение: 1100\n\n", "trace": "  File \"C:\\Users\\windw\\PycharmProjects\\Diplom\\Diplom_3\\tests\\test_order_feed.py\", line 159, in test_today_orders_counter\n    WebDriverWait(driver, 15).until(\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^\n        lambda d: int(d.find_element(*OrderFeedLocators.TODAY_ORDERS_COUNT).text) > initial_today,\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        message=f\"Счетчик за сегодня не увеличился. Начальное значение: {initial_today}\"\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"C:\\Users\\windw\\PycharmProjects\\Diplom\\Diplom_3\\venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 101, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1748199880922, "stop": 1748199917480}], "parameters": [{"name": "driver", "value": "'firefox'"}], "start": 1748199826971, "stop": 1748199917483, "uuid": "1eda1761-e5d1-430d-8c6f-89a81b53d497", "historyId": "664f12b588d10ac06541485f44065c8a", "testCaseId": "a7401c1353b13aeea26bbb5f5723665b", "fullName": "tests.test_order_feed.TestOrderFeed#test_today_orders_counter", "labels": [{"name": "feature", "value": "Лента заказов"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order_feed"}, {"name": "subSuite", "value": "TestOrderFeed"}, {"name": "host", "value": "Gemini_78"}, {"name": "thread", "value": "19464-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order_feed"}]}