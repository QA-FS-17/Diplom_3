{"name": "test_ingredient_counter_increase[chrome]", "status": "broken", "statusDetails": {"message": "RuntimeError: Таймаут при загрузке страницы: Message: Не удалось загрузить главную страницу", "trace": "self = <pages.main_page.MainPage object at 0x000001EEE8D8F550>\n\n    @allure.step(\"Открыть главную страницу\")\n    def open(self) -> 'MainPage':\n        \"\"\"Открывает главную страницу и возвращает экземпляр MainPage\"\"\"\n        try:\n            self.driver.get(self._base_url)\n>           self._wait_until(\n                lambda d: self._base_url == d.current_url,\n                message=\"Не удалось загрузить главную страницу\"\n            )\n\npages\\main_page.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.main_page.MainPage object at 0x000001EEE8D8F550>, condition = <function MainPage.open.<locals>.<lambda> at 0x000001EEE8DAC5E0>, timeout = None\nmessage = 'Не удалось загрузить главную страницу'\n\n    def _wait_until(self,\n                    condition: Callable[[WebDriver], Any],\n                    timeout: Union[int, float, None] = None,\n                    message: str = \"\") -> Any:\n        \"\"\"\n        Абстрактное ожидание условия\n        :param condition: Ожидаемое условие\n        :param timeout: Время ожидания\n        :param message: Сообщение об ошибке\n        \"\"\"\n        try:\n            wait_timeout = float(timeout) if timeout is not None else self.timeout\n>           return WebDriverWait(self.driver, wait_timeout).until(condition, message)\n\npages\\base_page.py:48: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"784b20524402590622f5992a09ebb47c\")>\nmethod = <function MainPage.open.<locals>.<lambda> at 0x000001EEE8DAC5E0>, message = 'Не удалось загрузить главную страницу'\n\n    def until(self, method: Callable[[WebDriver], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: Не удалось загрузить главную страницу\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:101: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.test_constructor.TestMainFunctionality object at 0x000001EEE77F9750>\ndriver = <undetected_chromedriver.Chrome (session=\"784b20524402590622f5992a09ebb47c\")>\n\n    @allure.story(\"Увеличение счетчика ингредиента\")\n    def test_ingredient_counter_increase(self, driver):\n        main_page = MainPage(driver)\n>       main_page.open()\n\ntests\\test_constructor.py:50: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.main_page.MainPage object at 0x000001EEE8D8F550>\n\n    @allure.step(\"Открыть главную страницу\")\n    def open(self) -> 'MainPage':\n        \"\"\"Открывает главную страницу и возвращает экземпляр MainPage\"\"\"\n        try:\n            self.driver.get(self._base_url)\n            self._wait_until(\n                lambda d: self._base_url == d.current_url,\n                message=\"Не удалось загрузить главную страницу\"\n            )\n            return self\n        except TimeoutException as e:\n>           raise RuntimeError(f\"Таймаут при загрузке страницы: {str(e)}\")\nE           RuntimeError: Таймаут при загрузке страницы: Message: Не удалось загрузить главную страницу\n\npages\\main_page.py:33: RuntimeError"}, "steps": [{"name": "Открыть главную страницу", "status": "broken", "statusDetails": {"message": "RuntimeError: Таймаут при загрузке страницы: Message: Не удалось загрузить главную страницу\n\n", "trace": "  File \"C:\\Users\\windw\\PycharmProjects\\Diplom\\Diplom_3\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\windw\\PycharmProjects\\Diplom\\Diplom_3\\pages\\main_page.py\", line 33, in open\n    raise RuntimeError(f\"Таймаут при загрузке страницы: {str(e)}\")\n"}, "start": 1748820854975, "stop": 1748820871867}], "parameters": [{"name": "driver", "value": "'chrome'"}], "start": 1748820854974, "stop": 1748820871869, "uuid": "30d27f6d-e4f7-4188-84d0-559f0f94116d", "historyId": "636de08f99daa156bc3ce465da861ce9", "testCaseId": "a0142bc80affb87839e6e1035594dda3", "fullName": "tests.test_constructor.TestMainFunctionality#test_ingredient_counter_increase", "labels": [{"name": "story", "value": "Увеличение счетчика ингредиента"}, {"name": "feature", "value": "Основной функционал"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_constructor"}, {"name": "subSuite", "value": "TestMainFunctionality"}, {"name": "host", "value": "Gemini_78"}, {"name": "thread", "value": "8968-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_constructor"}]}